
package es.jbp.juegos.mus.iu;

import es.jbp.juegos.mus.Accion;
import es.jbp.juegos.mus.ExcepcionJuego;
import es.jbp.juegos.mus.FaseJuego;
import es.jbp.juegos.mus.Jugada;
import es.jbp.juegos.mus.Jugador;
import es.jbp.juegos.mus.Lance;
import es.jbp.juegos.mus.Mesa;
import es.jbp.juegos.mus.Naipe;
import es.shs.comun.utiles.swing.modelos.ModeloLista;
import java.util.List;

/**
 *
 * @author jorge
 */
public class PanelJugador extends javax.swing.JPanel implements Jugador {
    
    private String nombre;
    private Mesa mesa;
    
    /**
     * Creates new form PanelJugador
     */
    public PanelJugador() {
        initComponents();
    }    
    
    public void setMesa(Mesa mesa) {
        this.mesa = mesa;
    }

    @Override
    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
        labelNombre.setText(nombre);
    }    
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelNombre = new javax.swing.JLabel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 32767));
        textMensaje = new javax.swing.JTextField();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 8), new java.awt.Dimension(0, 8), new java.awt.Dimension(32767, 8));
        panelCentral = new javax.swing.JPanel();
        panelBotones = new javax.swing.JPanel();
        botonMus = new javax.swing.JButton();
        botonCorto = new javax.swing.JButton();
        botonOrdago = new javax.swing.JButton();
        botonQuiero = new javax.swing.JButton();
        botonNoQuiero = new javax.swing.JButton();
        botonDescarte = new javax.swing.JButton();
        botonEnvido = new javax.swing.JButton();
        botonPaso = new javax.swing.JButton();
        labelPuntos = new javax.swing.JLabel();
        scrollListaCartas = new javax.swing.JScrollPane();
        listaCartas = new javax.swing.JList<>();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 0), new java.awt.Dimension(8, 32767));
        jScrollPane1 = new javax.swing.JScrollPane();
        textInformacion = new javax.swing.JTextArea();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 8));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel1.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        jPanel1.setMinimumSize(new java.awt.Dimension(52, 30));
        jPanel1.setPreferredSize(new java.awt.Dimension(105, 30));
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        labelNombre.setText("Nombre");
        jPanel1.add(labelNombre);
        jPanel1.add(filler2);

        textMensaje.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textMensaje.setText("jTextField1");
        textMensaje.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        textMensaje.setPreferredSize(new java.awt.Dimension(60, 25));
        jPanel1.add(textMensaje);

        add(jPanel1);
        add(filler1);

        panelCentral.setLayout(new javax.swing.BoxLayout(panelCentral, javax.swing.BoxLayout.LINE_AXIS));

        panelBotones.setMaximumSize(new java.awt.Dimension(100, 200));
        panelBotones.setMinimumSize(new java.awt.Dimension(100, 200));
        panelBotones.setPreferredSize(new java.awt.Dimension(100, 200));
        panelBotones.setLayout(new javax.swing.BoxLayout(panelBotones, javax.swing.BoxLayout.PAGE_AXIS));

        botonMus.setText("Mus");
        botonMus.setMaximumSize(new java.awt.Dimension(81, 23));
        botonMus.setMinimumSize(new java.awt.Dimension(81, 23));
        botonMus.setPreferredSize(new java.awt.Dimension(81, 23));
        botonMus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonMusActionPerformed(evt);
            }
        });
        panelBotones.add(botonMus);

        botonCorto.setText("Corto");
        botonCorto.setMaximumSize(new java.awt.Dimension(81, 23));
        botonCorto.setMinimumSize(new java.awt.Dimension(81, 23));
        botonCorto.setPreferredSize(new java.awt.Dimension(81, 23));
        botonCorto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCortoActionPerformed(evt);
            }
        });
        panelBotones.add(botonCorto);

        botonOrdago.setText("Ordago");
        botonOrdago.setMaximumSize(new java.awt.Dimension(81, 23));
        botonOrdago.setMinimumSize(new java.awt.Dimension(81, 23));
        botonOrdago.setPreferredSize(new java.awt.Dimension(81, 23));
        botonOrdago.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonOrdagoActionPerformed(evt);
            }
        });
        panelBotones.add(botonOrdago);

        botonQuiero.setText("Quiero");
        botonQuiero.setMaximumSize(new java.awt.Dimension(81, 23));
        botonQuiero.setMinimumSize(new java.awt.Dimension(81, 23));
        botonQuiero.setPreferredSize(new java.awt.Dimension(81, 23));
        botonQuiero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonQuieroActionPerformed(evt);
            }
        });
        panelBotones.add(botonQuiero);

        botonNoQuiero.setText("No quiero");
        botonNoQuiero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonNoQuieroActionPerformed(evt);
            }
        });
        panelBotones.add(botonNoQuiero);

        botonDescarte.setText("Descarte");
        botonDescarte.setMaximumSize(new java.awt.Dimension(81, 23));
        botonDescarte.setMinimumSize(new java.awt.Dimension(81, 23));
        botonDescarte.setPreferredSize(new java.awt.Dimension(81, 23));
        botonDescarte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDescarteActionPerformed(evt);
            }
        });
        panelBotones.add(botonDescarte);

        botonEnvido.setText("Envido");
        botonEnvido.setMaximumSize(new java.awt.Dimension(81, 23));
        botonEnvido.setMinimumSize(new java.awt.Dimension(81, 23));
        botonEnvido.setPreferredSize(new java.awt.Dimension(81, 23));
        botonEnvido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEnvidoActionPerformed(evt);
            }
        });
        panelBotones.add(botonEnvido);

        botonPaso.setText("Paso");
        botonPaso.setMaximumSize(new java.awt.Dimension(81, 23));
        botonPaso.setMinimumSize(new java.awt.Dimension(81, 23));
        botonPaso.setPreferredSize(new java.awt.Dimension(81, 23));
        botonPaso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonPasoActionPerformed(evt);
            }
        });
        panelBotones.add(botonPaso);

        labelPuntos.setText("Puntos:");
        panelBotones.add(labelPuntos);

        panelCentral.add(panelBotones);

        listaCartas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        scrollListaCartas.setViewportView(listaCartas);

        panelCentral.add(scrollListaCartas);
        panelCentral.add(filler3);

        textInformacion.setColumns(20);
        textInformacion.setRows(5);
        jScrollPane1.setViewportView(textInformacion);

        panelCentral.add(jScrollPane1);

        add(panelCentral);
    }// </editor-fold>//GEN-END:initComponents

    private void botonMusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonMusActionPerformed
        realizarAccion(Accion.DAR_MUS);
    }//GEN-LAST:event_botonMusActionPerformed

    private void botonCortoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCortoActionPerformed
        realizarAccion(Accion.CORTAR);
    }//GEN-LAST:event_botonCortoActionPerformed

    private void botonDescarteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDescarteActionPerformed
        realizarAccion(Accion.DESCARTAR);
    }//GEN-LAST:event_botonDescarteActionPerformed

    private void botonPasoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonPasoActionPerformed
        realizarAccion(Accion.PASAR);
    }//GEN-LAST:event_botonPasoActionPerformed

    private void botonEnvidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEnvidoActionPerformed
        realizarAccion(Accion.ENVIDAR);
    }//GEN-LAST:event_botonEnvidoActionPerformed

    private void botonOrdagoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonOrdagoActionPerformed
        realizarAccion(Accion.LANZAR_ORDAGO);
    }//GEN-LAST:event_botonOrdagoActionPerformed

    private void botonQuieroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonQuieroActionPerformed
        realizarAccion(Accion.QUERER);
    }//GEN-LAST:event_botonQuieroActionPerformed

    private void botonNoQuieroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonNoQuieroActionPerformed
        realizarAccion(Accion.NO_QUERER);
    }//GEN-LAST:event_botonNoQuieroActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonCorto;
    private javax.swing.JButton botonDescarte;
    private javax.swing.JButton botonEnvido;
    private javax.swing.JButton botonMus;
    private javax.swing.JButton botonNoQuiero;
    private javax.swing.JButton botonOrdago;
    private javax.swing.JButton botonPaso;
    private javax.swing.JButton botonQuiero;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelPuntos;
    private javax.swing.JList<String> listaCartas;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelCentral;
    private javax.swing.JScrollPane scrollListaCartas;
    private javax.swing.JTextArea textInformacion;
    private javax.swing.JTextField textMensaje;
    // End of variables declaration//GEN-END:variables


    @Override
    public void mensaje(String mensaje) {
        textMensaje.setText(mensaje);
        actualizarBotones();
    }

    @Override
    public void turno(Lance lance, FaseJuego estadoLance) {
       textMensaje.setText(lance + " " + estadoLance);
       actualizarBotones();
    }
    
    private void realizarAccion(Accion accion) {
        textMensaje.setText("");
        try {
            mesa.accionJugador(this, accion);        
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void actualizarBotones() {
        botonMus.setVisible(sePuedeRealizar(Accion.DAR_MUS));
        botonCorto.setVisible(sePuedeRealizar(Accion.CORTAR));
        botonDescarte.setVisible(sePuedeRealizar(Accion.DESCARTAR));
        botonEnvido.setVisible(sePuedeRealizar(Accion.ENVIDAR));
        botonNoQuiero.setVisible(sePuedeRealizar(Accion.NO_QUERER));
        botonQuiero.setVisible(sePuedeRealizar(Accion.QUERER));
        botonPaso.setVisible(sePuedeRealizar(Accion.PASAR));
        botonOrdago.setVisible(sePuedeRealizar(Accion.LANZAR_ORDAGO));
    }
    
    private boolean sePuedeRealizar(Accion accion) {
        try {
            return mesa.esTurnoJugador(this) && mesa.sePuedeRealizarAccion(accion);
        } catch (ExcepcionJuego ex) {
            ex.printStackTrace();
            return false;
        }
    }
    
    @Override
    public void setCartas(List<Naipe> cartas) {
        listaCartas.setModel(new ModeloLista(cartas));
    }

    @Override
    public int[] getDescartes() {
        int[] indicesSelecionados = listaCartas.getSelectedIndices();
        return indicesSelecionados;
    }

    @Override
    public void informacion(String mensaje) {
        textInformacion.append(mensaje);
        textInformacion.append("\n");
    }

    @Override
    public int getApuesta() {
        return 2;
    }

    @Override
    public void setPuntos(int puntos) {
        labelPuntos.setText("Puntos: " + puntos);
    }




}
